class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        int lMax = 0, rMax = 0;
        long total = 0;
        int l = 0, r = n - 1;

        while (l <= r) {
            // If lMax is smaller, process the left pointer
            if (lMax <= rMax) {
                if (height[l] < lMax) {
                    total += lMax - height[l];
                } else {
                    lMax = height[l];
                }
                l++;
            }
            // Otherwise, process the right pointer
            else {
                if (height[r] < rMax) {
                    total += rMax - height[r];
                } else {
                    rMax = height[r];
                }
                r--;
            }
        }

        return total;
    }
};
