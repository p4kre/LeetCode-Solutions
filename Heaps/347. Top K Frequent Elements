class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> ump;
        priority_queue <pair<int,int> , vector<pair<int,int>> , greater<pair<int, int>> > pq;
        vector<int> res;
        
        for(int i : nums){
            ump[i]++;
        }
        
        for(auto i : ump){
            pq.push(make_pair(i.second, i.first));

            if(pq.size() > k){
                pq.pop();
            }
        }

        while(!pq.empty()){
            pair<int , int> temp = pq.top();
            pq.pop();

            res.push_back(temp.second);
        }

        return res;
    }
};
